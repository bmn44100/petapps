app petshouse {
  wasp: {
    version: "^0.15.0"
  },
  title: "petshouse",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

route HomepageRoute { path: "/", to: Homepage }
page Homepage {
  component: import Homepage from "@src/pages/Homepage.jsx",
  authRequired: false
}

route ProductCatalogRoute { path: "/products/:category", to: ProductCatalogPage }
page ProductCatalogPage {
  component: import ProductCatalog from "@src/pages/ProductCatalog.jsx",
  authRequired: true
}

route CartRoute { path: "/cart", to: CartPage }
page CartPage {
  component: import Cart from "@src/pages/Cart.jsx",
  authRequired: true
}

action addToCart {
  fn: import { addToCart } from "@src/actions.js",
  entities: [CartItem, Product]
}

action createOrder {
  fn: import { createOrder } from "@src/actions.js",
  entities: [Order, OrderItem, CartItem, Product]
}

query getProductsByCategory {
  fn: import { getProductsByCategory } from "@src/queries.js",
  entities: [Product]
}

query getUserCart {
  fn: import { getUserCart } from "@src/queries.js",
  entities: [CartItem, Product, User]
}
